// Generated by view binder compiler. Do not edit!
package com.example.featurehome.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.featurehome.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemEnterpriseBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView itemEnterpriseCardView;

  @NonNull
  public final ConstraintLayout itemEnterpriseConstraintLayout;

  @NonNull
  public final TextView itemEnterpriseCountryTextView;

  @NonNull
  public final ImageView itemEnterpriseImageView;

  @NonNull
  public final TextView itemEnterpriseNameTextView;

  @NonNull
  public final TextView itemEnterpriseTypeTextView;

  private ItemEnterpriseBinding(@NonNull CardView rootView,
      @NonNull CardView itemEnterpriseCardView,
      @NonNull ConstraintLayout itemEnterpriseConstraintLayout,
      @NonNull TextView itemEnterpriseCountryTextView, @NonNull ImageView itemEnterpriseImageView,
      @NonNull TextView itemEnterpriseNameTextView, @NonNull TextView itemEnterpriseTypeTextView) {
    this.rootView = rootView;
    this.itemEnterpriseCardView = itemEnterpriseCardView;
    this.itemEnterpriseConstraintLayout = itemEnterpriseConstraintLayout;
    this.itemEnterpriseCountryTextView = itemEnterpriseCountryTextView;
    this.itemEnterpriseImageView = itemEnterpriseImageView;
    this.itemEnterpriseNameTextView = itemEnterpriseNameTextView;
    this.itemEnterpriseTypeTextView = itemEnterpriseTypeTextView;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemEnterpriseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemEnterpriseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_enterprise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemEnterpriseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView itemEnterpriseCardView = (CardView) rootView;

      id = R.id.itemEnterpriseConstraintLayout;
      ConstraintLayout itemEnterpriseConstraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (itemEnterpriseConstraintLayout == null) {
        break missingId;
      }

      id = R.id.itemEnterpriseCountryTextView;
      TextView itemEnterpriseCountryTextView = ViewBindings.findChildViewById(rootView, id);
      if (itemEnterpriseCountryTextView == null) {
        break missingId;
      }

      id = R.id.itemEnterpriseImageView;
      ImageView itemEnterpriseImageView = ViewBindings.findChildViewById(rootView, id);
      if (itemEnterpriseImageView == null) {
        break missingId;
      }

      id = R.id.itemEnterpriseNameTextView;
      TextView itemEnterpriseNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (itemEnterpriseNameTextView == null) {
        break missingId;
      }

      id = R.id.itemEnterpriseTypeTextView;
      TextView itemEnterpriseTypeTextView = ViewBindings.findChildViewById(rootView, id);
      if (itemEnterpriseTypeTextView == null) {
        break missingId;
      }

      return new ItemEnterpriseBinding((CardView) rootView, itemEnterpriseCardView,
          itemEnterpriseConstraintLayout, itemEnterpriseCountryTextView, itemEnterpriseImageView,
          itemEnterpriseNameTextView, itemEnterpriseTypeTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
